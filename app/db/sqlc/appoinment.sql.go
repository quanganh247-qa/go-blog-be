// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: appoinment.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createAppointment = `-- name: CreateAppointment :one
INSERT INTO Appointment (
    doctor_id,
    petid,
    service_id,
    time_slot_id,
    status
) VALUES (
    $1, $2, $3, $4, 'pending'
) RETURNING appointment_id, petid, doctor_id, service_id, date, status, notes, reminder_send, time_slot_id
`

type CreateAppointmentParams struct {
	DoctorID   pgtype.Int8 `json:"doctor_id"`
	Petid      pgtype.Int8 `json:"petid"`
	ServiceID  pgtype.Int8 `json:"service_id"`
	TimeSlotID pgtype.Int8 `json:"time_slot_id"`
}

func (q *Queries) CreateAppointment(ctx context.Context, arg CreateAppointmentParams) (Appointment, error) {
	row := q.db.QueryRow(ctx, createAppointment,
		arg.DoctorID,
		arg.Petid,
		arg.ServiceID,
		arg.TimeSlotID,
	)
	var i Appointment
	err := row.Scan(
		&i.AppointmentID,
		&i.Petid,
		&i.DoctorID,
		&i.ServiceID,
		&i.Date,
		&i.Status,
		&i.Notes,
		&i.ReminderSend,
		&i.TimeSlotID,
	)
	return i, err
}
