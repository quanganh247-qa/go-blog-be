// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package db

import (
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type Asset struct {
	ID        int64              `json:"id"`
	ProjectID pgtype.Int4        `json:"project_id"`
	Name      string             `json:"name"`
	FilePath  string             `json:"file_path"`
	FileType  string             `json:"file_type"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type Category struct {
	ID           int64       `json:"id"`
	CategoryName pgtype.Text `json:"category_name"`
}

type Component struct {
	ID            int64              `json:"id"`
	ProjectID     int32              `json:"project_id"`
	Name          string             `json:"name"`
	CreatedAt     pgtype.Timestamptz `json:"created_at"`
	UpdatedAt     pgtype.Timestamptz `json:"updated_at"`
	ComponentCode pgtype.Text        `json:"component_code"`
	Description   pgtype.Text        `json:"description"`
	Content       pgtype.Text        `json:"content"`
	RemovedAt     pgtype.Timestamptz `json:"removed_at"`
}

type Domain struct {
	ID         int64              `json:"id"`
	Username   pgtype.Text        `json:"username"`
	PageID     int64              `json:"page_id"`
	DomainName pgtype.Text        `json:"domain_name"`
	Status     pgtype.Text        `json:"status"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
}

type Page struct {
	ID            int64              `json:"id"`
	ProjectID     pgtype.Int4        `json:"project_id"`
	Name          string             `json:"name"`
	Slug          string             `json:"slug"`
	CreatedAt     pgtype.Timestamptz `json:"created_at"`
	UpdatedAt     pgtype.Timestamptz `json:"updated_at"`
	Content       pgtype.Text        `json:"content"`
	CategoryName  pgtype.Text        `json:"category_name"`
	ComponentCode pgtype.Text        `json:"component_code"`
	RemovedAt     pgtype.Timestamptz `json:"removed_at"`
}

type PagesHistoric struct {
	ID           int64              `json:"id"`
	PageID       int64              `json:"page_id"`
	PageVersion  pgtype.Int4        `json:"page_version"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	RemovedAt    pgtype.Timestamptz `json:"removed_at"`
	Content      pgtype.Text        `json:"content"`
	Name         pgtype.Text        `json:"name"`
	Slug         pgtype.Text        `json:"slug"`
	CategoryName pgtype.Text        `json:"category_name"`
}

type Project struct {
	ID          int64              `json:"id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
	Username    string             `json:"username"`
}

type Subscription struct {
	ID        int64              `json:"id"`
	Username  pgtype.Text        `json:"username"`
	PlanType  pgtype.Text        `json:"plan_type"`
	Price     pgtype.Numeric     `json:"price"`
	StartDate pgtype.Timestamptz `json:"start_date"`
	EndDate   pgtype.Timestamptz `json:"end_date"`
}

type User struct {
	ID                int64              `json:"id"`
	Username          string             `json:"username"`
	HashedPassword    string             `json:"hashed_password"`
	FullName          string             `json:"full_name"`
	Email             string             `json:"email"`
	PasswordChangedAt time.Time          `json:"password_changed_at"`
	CreatedAt         time.Time          `json:"created_at"`
	IsVerifiedEmail   pgtype.Bool        `json:"is_verified_email"`
	PlanType          pgtype.Text        `json:"plan_type"`
	RemovedAt         pgtype.Timestamptz `json:"removed_at"`
}

type VerifyEmail struct {
	ID         int64              `json:"id"`
	Username   string             `json:"username"`
	Email      string             `json:"email"`
	SecretCode string             `json:"secret_code"`
	IsUsed     bool               `json:"is_used"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	ExpiredAt  pgtype.Timestamptz `json:"expired_at"`
}
