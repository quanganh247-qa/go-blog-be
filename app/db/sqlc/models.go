// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package db

import (
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type Feedingschedule struct {
	Feedingscheduleid int64          `json:"feedingscheduleid"`
	Petid             pgtype.Int8    `json:"petid"`
	Mealtime          pgtype.Time    `json:"mealtime"`
	Foodtype          string         `json:"foodtype"`
	Quantity          pgtype.Numeric `json:"quantity"`
	Notes             pgtype.Text    `json:"notes"`
}

type Healthcheck struct {
	Healthcheckid   int64       `json:"healthcheckid"`
	Petid           pgtype.Int8 `json:"petid"`
	Date            pgtype.Date `json:"date"`
	Clinicname      pgtype.Text `json:"clinicname"`
	Doctorname      pgtype.Text `json:"doctorname"`
	Summary         pgtype.Text `json:"summary"`
	Nextcheckupdate pgtype.Date `json:"nextcheckupdate"`
}

type Pet struct {
	Petid        int64          `json:"petid"`
	Userid       pgtype.Int8    `json:"userid"`
	Name         string         `json:"name"`
	Type         string         `json:"type"`
	Breed        pgtype.Text    `json:"breed"`
	Age          pgtype.Int4    `json:"age"`
	Weight       pgtype.Numeric `json:"weight"`
	Gender       pgtype.Text    `json:"gender"`
	Healthnotes  pgtype.Text    `json:"healthnotes"`
	Profileimage pgtype.Text    `json:"profileimage"`
}

type Petcommunitycomment struct {
	Commentid   int64       `json:"commentid"`
	Postid      pgtype.Int8 `json:"postid"`
	Userid      pgtype.Int8 `json:"userid"`
	Content     string      `json:"content"`
	Commentdate pgtype.Date `json:"commentdate"`
}

type Petcommunitypost struct {
	Postid   int64       `json:"postid"`
	Userid   pgtype.Int8 `json:"userid"`
	Petid    pgtype.Int8 `json:"petid"`
	Content  string      `json:"content"`
	Image    pgtype.Text `json:"image"`
	Postdate pgtype.Date `json:"postdate"`
}

type Reminder struct {
	Reminderid   int64       `json:"reminderid"`
	Userid       pgtype.Int8 `json:"userid"`
	Petid        pgtype.Int8 `json:"petid"`
	Remindertype string      `json:"remindertype"`
	Reminderdate pgtype.Date `json:"reminderdate"`
	Description  pgtype.Text `json:"description"`
	Status       pgtype.Text `json:"status"`
}

type Service struct {
	Serviceid   int64          `json:"serviceid"`
	Servicetype string         `json:"servicetype"`
	Name        string         `json:"name"`
	Address     pgtype.Text    `json:"address"`
	Phonenumber pgtype.Text    `json:"phonenumber"`
	Website     pgtype.Text    `json:"website"`
	Rating      pgtype.Numeric `json:"rating"`
}

type Servicereview struct {
	Reviewid  int64          `json:"reviewid"`
	Serviceid pgtype.Int8    `json:"serviceid"`
	Userid    pgtype.Int8    `json:"userid"`
	Rating    pgtype.Numeric `json:"rating"`
	Review    pgtype.Text    `json:"review"`
	Date      pgtype.Date    `json:"date"`
}

type User struct {
	ID                int64              `json:"id"`
	Username          string             `json:"username"`
	HashedPassword    string             `json:"hashed_password"`
	FullName          string             `json:"full_name"`
	Email             string             `json:"email"`
	PhoneNumber       pgtype.Text        `json:"phone_number"`
	PasswordChangedAt time.Time          `json:"password_changed_at"`
	CreatedAt         time.Time          `json:"created_at"`
	IsVerifiedEmail   pgtype.Bool        `json:"is_verified_email"`
	RemovedAt         pgtype.Timestamptz `json:"removed_at"`
}

type Vaccination struct {
	Vaccinationid    int64       `json:"vaccinationid"`
	Petid            pgtype.Int8 `json:"petid"`
	Vaccinename      string      `json:"vaccinename"`
	Dateadministered pgtype.Date `json:"dateadministered"`
	Nextduedate      pgtype.Date `json:"nextduedate"`
	Notes            pgtype.Text `json:"notes"`
}

type VerifyEmail struct {
	ID         int64              `json:"id"`
	Username   string             `json:"username"`
	Email      string             `json:"email"`
	SecretCode string             `json:"secret_code"`
	IsUsed     bool               `json:"is_used"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	ExpiredAt  pgtype.Timestamptz `json:"expired_at"`
}
