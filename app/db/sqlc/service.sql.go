// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: service.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createService = `-- name: CreateService :one
INSERT INTO Service (
  TypeID,
  Name,
  Price,
  Duration,
  Description,
  IsAvailable
) VALUES (
  $1, $2, $3, $4, $5, $6
) RETURNING serviceid, typeid, name, price, duration, description, isavailable
`

type CreateServiceParams struct {
	Typeid      pgtype.Int8     `json:"typeid"`
	Name        string          `json:"name"`
	Price       pgtype.Float8   `json:"price"`
	Duration    pgtype.Interval `json:"duration"`
	Description pgtype.Text     `json:"description"`
	Isavailable pgtype.Bool     `json:"isavailable"`
}

func (q *Queries) CreateService(ctx context.Context, arg CreateServiceParams) (Service, error) {
	row := q.db.QueryRow(ctx, createService,
		arg.Typeid,
		arg.Name,
		arg.Price,
		arg.Duration,
		arg.Description,
		arg.Isavailable,
	)
	var i Service
	err := row.Scan(
		&i.Serviceid,
		&i.Typeid,
		&i.Name,
		&i.Price,
		&i.Duration,
		&i.Description,
		&i.Isavailable,
	)
	return i, err
}

const deleteService = `-- name: DeleteService :exec
DELETE FROM Service WHERE ServiceID = $1
`

func (q *Queries) DeleteService(ctx context.Context, serviceid int64) error {
	_, err := q.db.Exec(ctx, deleteService, serviceid)
	return err
}
