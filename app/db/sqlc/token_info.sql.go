// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: token_info.sql

package db

import (
	"context"
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

const insertTokenInfo = `-- name: InsertTokenInfo :one
INSERT INTO token_info (access_token, refresh_token, token_type ,user_name, expiry)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, user_name, access_token, token_type, refresh_token, expiry, created_at, updated_at
`

type InsertTokenInfoParams struct {
	AccessToken  string      `json:"access_token"`
	RefreshToken pgtype.Text `json:"refresh_token"`
	TokenType    string      `json:"token_type"`
	UserName     string      `json:"user_name"`
	Expiry       time.Time   `json:"expiry"`
}

func (q *Queries) InsertTokenInfo(ctx context.Context, arg InsertTokenInfoParams) (TokenInfo, error) {
	row := q.db.QueryRow(ctx, insertTokenInfo,
		arg.AccessToken,
		arg.RefreshToken,
		arg.TokenType,
		arg.UserName,
		arg.Expiry,
	)
	var i TokenInfo
	err := row.Scan(
		&i.ID,
		&i.UserName,
		&i.AccessToken,
		&i.TokenType,
		&i.RefreshToken,
		&i.Expiry,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
